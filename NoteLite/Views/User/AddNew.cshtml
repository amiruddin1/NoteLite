@using NoteLite.Models.DTO
@model NoteModel
@{
    ViewData["Title"] = "Add New Note";
}

@if (ViewBag.Addition_response != null)
{
    if (ViewBag.Updation_response == "Error")
    {
        <script>
            alert("Having Problem with Note Addition!")
        </script>
    }
}

@{
    var categories = ViewData["Categories"] as List<SelectListItem>;
}
<h1>Add New Note</h1>
<hr />
<div class="row">
    <div class="col-md-4 col-sm-12">
        <form asp-action="AddNew" asp-controller="User" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="NoteTitle" class="control-label"></label>
                <input asp-for="NoteTitle" class="form-control"/>
                <span asp-validation-for="NoteTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div> 
            <div class="form-group">
                <label asp-for="Category_Id" class="control-label">Category</label>
                <select asp-for="Category_Id" class="form-control" >
                    <option value="">Select Category</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.Value">@category.Text</option>
                    }
                </select>
            </div>
           
            <div class="form-group">
                <input type="submit" value="Add Note" class="btn btn-outline-primary my-2 px-5" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        tinymce.init({
            selector: 'textarea'
        });
    </script>
}